{
  "Responsible": "mra",
  "Title": "speccer - a CLI tool for specs",
  "Text": "[*speccer*](https://github.com/metakeule/speccer) is a CLI tool for dealing with specs.\n\nIt is a frontend to the [speclib](https://github.com/metakeule/speclib).\n\n\n",
  "Comments": {},
  "LastUpdate": "2013-11-13",
  "State": "FULLY_IMPLEMENTED",
  "Deadline": "2013-11-11",
  "EstimatedHours": 0,
  "Company": "Know GmbH",
  "Project": "speclib",
  "URL": "http://rawgithub.com/metakeule/speccer/master/spec/spec",
  "Language": "en_EN",
  "DateFormat": "YYYY-MM-DD",
  "RequestedBy": [
    "mra"
  ],
  "Related": {},
  "Translations": {},
  "SupersededBy": {},
  "Resources": null,
  "Persons": {
    "mra": "Marc Ren√© Arns \u003clinux@marcrenearns.de\u003e"
  },
  "Parent": "http://rawgithub.com/metakeule/speclib/master/spec/spec.html",
  "Sections": {
    "CONTRADICTION": [
      {
        "Responsible": "mra",
        "Title": "Rights Management vs responsible",
        "Text": "Rights Management is a Non Goal but on the other hand we have\npersons responsible for paragraphs. \n\nIf anyone may edit any paragraph, then the responsibility\nmust constantly change (and is worthless) or it is false.\n",
        "Comments": {
          "mra": "Yes the responsability should change often in order to request feedback.\nIf multiple persons work on a spec, the spec is considered teamwork\nand the people should work together.\n\nOnly one person is responsible for each paragraph at a single point in\ntime. This could be enforced by external tools as well as rights management\nif necessary. Although with version control it should not be necessary."
        },
        "LastUpdate": "2013-11-12",
        "State": "OBSOLET",
        "Deadline": "2013-11-11",
        "EstimatedHours": 1
      }
    ],
    "DEFINITION": [
      {
        "Responsible": "mra",
        "Title": "All definitions of the `speclib` apply",
        "Text": "",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "-name",
        "Text": "The parameter passed via `-name` is the name of a spec property (like\n`TRANSLATIONS` with the command `property`) or the name of a paragraph\nproperty (like `STATE` with the command `meta`).",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "-usage",
        "Text": "The parameter passed via `-usage` is the name of a filter provided by\n`speccer` for typical usage scenarios.\n\nThere are currently:\n\n- **documentation** filters \n  - PROPERTIES\n  - META\n  - COMMENTS\n  - NONGOALS\n  - CONTRADICTIONS\n  - UNDECIDED\n  - SPEC_END\n  - RESOURCES\n  - PLANNING\n  - APPROVED\n  - PARTLY_IMPLEMENTED\n  - OBSOLET\n- **approval** filters\n  - META\n  - COMMENTS\n  - CONTRADICTIONS\n  - UNDECIDED\n  - SPEC_END\n  - RESOURCES\n  - PLANNING\n  - OBSOLET\n- **discussion** filters\n  - OVERVIEW\n  - APPROVED\n  - PARTLY_IMPLEMENTED\n  - OBSOLET\n  - SPEC_END\n- **implementation** filters\n  - UNDECIDED\n  - PLANNING\n  - FULLY_IMPLEMENTED\n  - OBSOLET\n",
        "Comments": {},
        "LastUpdate": "2013-11-13",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "Current Spec",
        "Text": "\nThe current spec is the spec that is loaded from a special file\nin the current directory (`pwd`).\n\nIf the `-language` option is set, the spec is loaded from the file\n`spec_[language].json`, e.g.\n\n    spec_en_US.json\n\nOtherwise it is looking for any files matching the regular expression\n\n    spec*.json\n\nIf there is just one file matching, the spec is loaded from this file.\nOtherwise an error is thrown mentioning that the language option should\nprobably be set.",
        "Comments": {},
        "LastUpdate": "2013-11-13",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-13",
        "EstimatedHours": 1
      }
    ],
    "FEATURE": [
      {
        "Responsible": "mra",
        "Title": "create a new spec",
        "Text": "Go into a folder that should contain your spec and run\n\n    speccer -cmd create\n\nCreates a file `spec.json` in the current folder and exports it\nas `spec.md` (Markdown) and `spec.html` (HTML).\n\nIf the `-language` parameter is set (to e.g. `en_US`) it creates\nthe following files instead:\n\n- `spec_en_US.json`\n- `spec_en_US.md`\n- `spec_en_US.html`\n\nBe aware that the new spec is not valid since there are missing\nproperties. You can validate a spec to see them:\n\n    speccer -cmd validate\n\n\n\n",
        "Comments": {},
        "LastUpdate": "2013-11-13",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "validate a spec",
        "Text": "Go into a folder that contains your spec and run\n\n    speccer -cmd validate\n\nIt it returns nothing your spec is valid.",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "recreate HTML and markdown export based on current spec.json",
        "Text": "Go into a folder that contains your spec and run\n\n    speccer -cmd save\n\n",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "export markdown to stdout without overwriting json.md",
        "Text": "Go into a folder that contains your spec and run\n\n    speccer -cmd markdown\n\nYou might also pass the usage option to filter out some data, e.g.\n\n    speccer -cmd markdown -usage \"documentation\"\n\n    \n\n",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "export HTML to stdout without overwriting json.html",
        "Text": "Go into a folder that contains your spec and run\n\n    speccer -cmd html\n\nYou might also pass the usage option to filter out some data, e.g.\n\n    speccer -cmd html -usage \"documentation\"\n\n\n\n",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "print property of spec",
        "Text": "Go into a folder that contains your spec and run\n\n    speccer -cmd property -name COMPANY\n\nto print the COMPANY property. The properties are \nall written in high caps and defined in `speclib`.\n\n\n",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "set property of spec",
        "Text": "Go into a folder that contains your spec and run\n\n    speccer -cmd property -name COMPANY -set acme\n\nto set the `COMPANY` property to `acme`. The properties are \nall written in high caps and defined in `speclib`.\n\n\n",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "unset property of spec",
        "Text": "Go into a folder that contains your spec and run\n\n    speccer -cmd property -name PARENT -uset\n\nto unset the `PARENT` property. Only the following properties can\nbe unset:\n\n- REQUESTEDBY\n- RELATED\n- TRANSLATIONS\n- SUPERSEDEDBY\n- RESOURCES\n- PARENT\n- PERSONS\n",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "add markdown text to a section",
        "Text": "Go into a folder that contains your spec and write your text\ninto a file, let's say `new.md`.\n\nPut the title of the paragraph in the first line \nand the body in the next lines.\nThen run\n\n    speccer -cmd add -sec SCENARIO -resp 'Your Name' -set new.md\n\nto add title and body to the SCENARIO sections.\nThe available sections are defined in the `speclib`.\n\n\n\n\n",
        "Comments": {},
        "LastUpdate": "2013-11-13",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "show list of paragraphs of a section",
        "Text": "Go into a folder that contains your spec and run\n\n    speccer -cmd positions -sec SCENARIO\n\nto see a list of all paragraphs of the SCENARIO section.\nEach paragraph has the first line printed preceeded by \na number indicating the position of the paragraph inside\nthe section. This position can be used to print or change\nthe paragraph.\n\n\n",
        "Comments": {},
        "LastUpdate": "2013-11-13",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "show content of a paragraphs of a section",
        "Text": "Go into a folder that contains your spec.\nYou will need to know the position of the paragraph\nyou want to see. Therefor you might want to first \nprint all positions of the section (here SCENARIO) \nwith\n\n    speccer -cmd positions -sec SCENARIO\n\nthen you can run\n\n    speccer -cmd text -sec SCENARIO -at 3\n\nto see the text for the 3rd paragraph in the\nSCENARIO section.\n\nIf you want to include comments and meta data, run\n\n    speccer -cmd text -sec SCENARIO -at 3 -with-comments -with-meta\n\n\n",
        "Comments": {},
        "LastUpdate": "2013-11-13",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "change content of a paragraph of a section",
        "Text": "Go into a folder that contains your spec.\nYou will need to know the position of the paragraph\nyou want to see. Therefor you might want to first \nprint all positions of the section (here SCENARIO) \nwith\n\n    speccer -cmd positions -sec SCENARIO\n\nthen you can run\n\n    speccer -cmd text -sec SCENARIO -at 3 \u003e temp.md\n\nto save the current text and comments for the 3rd paragraph in the\nSCENARIO section to the file `temp.md`.\n\nNow fire up your editor to change the content. Then run\n\n    speccer -cmd text -sec SCENARIO -at 3 -set temp.md\n\nto set the text of the 3rd paragraph in the SCENARIO section.\n\nThe comments and meta data (including the title) of the 3rd paragraph are not modified by this operation. So you may want to change them too.\n\n\n\n\n\n",
        "Comments": {},
        "LastUpdate": "2013-11-13",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "see, add and change comment to a paragraph of a section",
        "Text": "Go into a folder that contains your spec.\nYou will need to know the position of the paragraph\nyou want to see. Therefor you might want to first \nprint all positions of the section (here SCENARIO) \nwith\n\n    speccer -cmd positions -sec SCENARIO\n\nthen you can run\n\n    speccer -cmd comment -sec SCENARIO -at 3\n\nto see the current comments for the 3rd paragraph in the\nSCENARIO section.\n\nNow if the author of your comment already made a comment to \nthis paragraph and if you want to append to this old comment,\nyou first have to save the old one.\n\nTo do this, run \n\n    speccer -cmd comment -sec SCENARIO -at 3 -author Jim \u003e temp.md\n\nto save the comment of `Jim` to the file `temp.md`. Then you can edit this\nfile. If you just want to remove the old comment or if there was no\ncomment you may simply start with an empty file `temp.md`.\n\nAfter you edited the file, run \n\n    speccer -cmd comment -sec SCENARIO -at 3 -author Jim -set temp.md\n\nto set the comment of `Jim` on the 3rd paragraph of the SCENARIO section\nto the content of the file `temp.md`.\n\n\n",
        "Comments": {},
        "LastUpdate": "2013-11-13",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "move a paragraph of a section",
        "Text": "Go into a folder that contains your spec.\nYou will need to know the position of the paragraph\nyou want to move. Therefor you might want to first \nprint all positions of the section (here SCENARIO) \nwith\n\n    speccer -cmd positions -sec SCENARIO\n\nthen you can run\n\n    speccer -cmd move -sec SCENARIO -at 3 -to 1\n\nto move the 3rd paragraph in the SCENARIO section to be the first.\n\n\n",
        "Comments": {},
        "LastUpdate": "2013-11-13",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "delete a paragraph of a section",
        "Text": "Go into a folder that contains your spec.\nYou will need to know the position of the paragraph\nyou want to delete. Therefor you might want to first \nprint all positions of the section (here SCENARIO) \nwith\n\n    speccer -cmd positions -sec SCENARIO\n\nthen you can run\n\n    speccer -cmd rm -sec SCENARIO -at 3\n\nto remove the 3rd paragraph in the SCENARIO section.\n\n\n",
        "Comments": {},
        "LastUpdate": "2013-11-13",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "see and change meta data of a paragraph of a section",
        "Text": "Go into a folder that contains your spec.\nYou will need to know the position of the paragraph\nyou want to see the meta data. Therefor you might want to first \nprint all positions of the section (here SCENARIO) \nwith\n\n    speccer -cmd positions -sec SCENARIO\n\nthen you can run\n\n    speccer -cmd meta -sec SCENARIO -at 3\n\nto see all meta data of the 3rd paragraph in the SCENARIO section.\n\nIf you want to change a datum you will have to pass the name:\n\n    speccer -cmd meta -sec SCENARIO -at 3 -name RESPONSIBLE -set Jim\n\n\n\n\n",
        "Comments": {},
        "LastUpdate": "2013-11-13",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "shortcuts",
        "Text": "To use the `bash` / `zsh` shortcuts, copy the `aliases.sh`\ninto your home directory\n\n    cp aliases.sh ~/.speccer_aliases.sh\n\nand write the following into your `.bashrc`\n\n    . ~/.speccer_aliases.sh\n\nThen you will have access to the following shortcuts\n(in bold is an example input to put after the alias).\n\n#### General\n`spec_create`   \n`spec_validate`  \n`spec_save`   \n\n#### Markdown export\n`spec_markdown`   \n`spec_markdown-doc`   \n`spec_markdown-approve`   \n`spec_markdown-discuss`   \n`spec_markdown-implement`   \n`spec_markdown-clean`   \n\n#### HTML export\n`spec_html`   \n`spec_html-doc`   \n`spec_html-approve`   \n`spec_html-discuss`   \n`spec_html-implement`   \n`spec_html-clean`   \n\n#### Spec property getters\n`spec-requestedby`   \n`spec-related`   \n`spec-translations`   \n`spec-supersededby`   \n`spec-resources`   \n`spec-parent`   \n`spec-company`   \n`spec-project`   \n`spec-persons`   \n`spec-url`   \n`spec-language`   \n`spec-dateformat`   \n`spec-approved`   \n\n#### Spec property unsetters\n`spec_uset-requestedby`   \n`spec_uset-related`   \n`spec_uset-translations`   \n`spec_uset-supersededby`   \n`spec_uset-resources`   \n`spec_uset-parent`   \n`spec_uset-persons`   \n\n#### Spec property setters\n`spec_set-requestedby` **Jim**  \n`spec_set-related` **'{\"other\": \"http://other.com/spec\"}'**  \n`spec_set-translations`  **'{\"de_DE\": \"http://de.other.com/spec\"}'**  \n`spec_set-supersededby` **'{\"v2\": \"http://other.com/v2/spec\"}'**  \n`spec_set-resources` **'{\"ER diagramm\": \"http://other.com/er.png\"}'**  \n`spec_set-parent` **'http://other.com/parent-spec'**  \n`spec_set-company` **acme**  \n`spec_set-project` **'my project'**  \n`spec_set-url` **'http://greatspec.com/spec'**  \n`spec_set-language` **en_US**  \n`spec_set-dateformat` **YYYY-MM-DD**  \n`spec_set-approved`  **true**  \n`spec_set-persons`  **'{\"PP\": \"Paul Panther \u003cpaul@panther.com\u003e\"}'**  \n\n#### Add Sections\n`spec_add-SCENARIO`  **new.md**  \n`spec_add-CONTRADICTION`  **new.md**  \n`spec_add-DEFINITION` **new.md**  \n`spec_add-FEATURE` **new.md**  \n`spec_add-NONGOAL`  **new.md**  \n`spec_add-UNDECIDED` **new.md**  \n\n#### Show Sections\n`spec-OVERVIEW`   \n`spec-SCENARIO-at` **2**  \n`spec-CONTRADICTION-at` **5**  \n`spec-DEFINITION-at` **20**  \n`spec-FEATURE-at` **1**  \n`spec-NONGOAL-at`  **2**  \n`spec-UNDECIDED-at`  **5**  \n\n#### Show Sections with comments and meta\n`spec-OVERVIEW-full`  \n`spec-SCENARIO-full-at` **2**  \n`spec-CONTRADICTION-full-at` **2**  \n`spec-DEFINITION-full-at` **5**  \n`spec-FEATURE-full-at` **2**  \n`spec-NONGOAL-full-at`  **7**  \n`spec-UNDECIDED-full-at` **2**  \n\n#### Get list of Paragraphs for all section\n`spec_ls`  \n\n#### Get list of Paragraphs for a section\n`spec_ls-SCENARIO`   \n`spec_ls-CONTRADICTION`   \n`spec_ls-DEFINITION`   \n`spec_ls-FEATURE`   \n`spec_ls-NONGOAL`   \n`spec_ls-UNDECIDED`   \n\n#### Get Comments of Paragraphs for a section\n`spec_comment-OVERVIEW`   \n`spec_comment-SCENARIO-at`  **2**  \n`spec_comment-CONTRADICTION-at`  **2**  \n`spec_comment-DEFINITION-at`  **2**  \n`spec_comment-FEATURE-at`  **2**  \n`spec_comment-NONGOAL-at`  **2**  \n`spec_comment-UNDECIDED-at` **2**  \n\n#### Set Comment of Paragraph for a section\n`spec_comment_replace-OVERVIEW`  **new.md**  \n`spec_comment_replace-SCENARIO`  **new.md -at 2**  \n`spec_comment_replace-CONTRADICTION`  **new.md -at 2**  \n`spec_comment_replace-DEFINITION`  **new.md -at 2**  \n`spec_comment_replace-FEATURE`  **new.md -at 2**  \n`spec_comment_replace-NONGOAL`  **new.md -at 2**  \n`spec_comment_replace-UNDECIDED`  **new.md -at 2**  \n\n#### Replace Sections\n`spec_replace-OVERVIEW`  **new.md**  \n`spec_replace-SCENARIO`  **new.md -at 2**  \n`spec_replace-CONTRADICTION` **new.md -at 2**  \n`spec_replace-DEFINITION` **new.md -at 2**  \n`spec_replace-FEATURE` **new.md -at 2**  \n`spec_replace-NONGOAL` **new.md -at 2**  \n`spec_replace-UNDECIDED` **new.md -at 2**  \n\n#### Move Sections\n`spec_mv-SCENARIO-at`  **2 -to 5**  \n`spec_mv-CONTRADICTION-at` **2 -to 5**  \n`spec_mv-DEFINITION-at` **2 -to 5**  \n`spec_mv-FEATURE-at` **2 -to 5**  \n`spec_mv-NONGOAL-at` **2 -to 5**  \n`spec_mv-UNDECIDED-at` **2 -to 5**  \n\n#### Remove Sections\n`spec_rm-SCENARIO-at` **2**  \n`spec_rm-CONTRADICTION-at` **2**  \n`spec_rm-DEFINITION-at` **2**  \n`spec_rm-FEATURE-at` **2**  \n`spec_rm-NONGOAL-at` **2**  \n`spec_rm-UNDECIDED-at`  **2**  \n\n#### Get Meta Data of Overview / Spec\n`spec-RESPONSIBLE`  \n`spec-STATE`  \n`spec-DEADLINE`  \n`spec-LASTUPDATE`  \n`spec-ESTIMATEDHOURS`  \n`spec-TITLE`  \n\n#### Get Meta Data of Section\n`spec-SCENARIO-RESPONSIBLE-at`  **2**  \n`spec-SCENARIO-STATE-at`  **2**  \n`spec-SCENARIO-DEADLINE-at`  **2**  \n`spec-SCENARIO-LASTUPDATE-at`  **2**  \n`spec-SCENARIO-ESTIMATEDHOURS-at`  **2**  \n`spec-SCENARIO-TITLE-at`  **2**  \n\n`spec-CONTRADICTION-RESPONSIBLE-at`  **2**  \n`spec-CONTRADICTION-STATE-at`  **2**  \n`spec-CONTRADICTION-DEADLINE-at`  **2**  \n`spec-CONTRADICTION-LASTUPDATE-at`  **2**  \n`spec-CONTRADICTION-ESTIMATEDHOURS-at`  **2**  \n`spec-CONTRADICTION-TITLE-at`  **2**  \n\n`spec-DEFINITION-RESPONSIBLE-at`  **2**  \n`spec-DEFINITION-STATE-at`  **2**  \n`spec-DEFINITION-DEADLINE-at`  **2**  \n`spec-DEFINITION-LASTUPDATE-at`  **2**  \n`spec-DEFINITION-ESTIMATEDHOURS-at`  **2**  \n`spec-DEFINITION-TITLE-at`  **2**  \n\n`spec-FEATURE-RESPONSIBLE-at`  **2**  \n`spec-FEATURE-STATE-at`  **2**  \n`spec-FEATURE-DEADLINE-at`  **2**  \n`spec-FEATURE-LASTUPDATE-at`  **2**  \n`spec-FEATURE-ESTIMATEDHOURS-at`  **2**  \n`spec-FEATURE-TITLE-at`  **2**  \n\n`spec-NONGOAL-RESPONSIBLE-at`  **2**  \n`spec-NONGOAL-STATE-at`  **2**  \n`spec-NONGOAL-DEADLINE-at`   **2**  \n`spec-NONGOAL-LASTUPDATE-at`  **2**  \n`spec-NONGOAL-ESTIMATEDHOURS-at`  **2**  \n`spec-NONGOAL-TITLE-at`  **2**  \n\n`spec-UNDECIDED-RESPONSIBLE-at`  **2**  \n`spec-UNDECIDED-STATE-at`  **2**  \n`spec-UNDECIDED-DEADLINE-at`  **2**  \n`spec-UNDECIDED-LASTUPDATE-at`  **2**  \n`spec-UNDECIDED-ESTIMATEDHOURS-at` **2**  \n`spec-UNDECIDED-TITLE-at`  **2**  \n\n#### Set Meta Data of Overview / Spec\n`spec_set-RESPONSIBLE` **'Peter Pan'**  \n`spec_set-PLANNING`  \n`spec_set-APPROVED`  \n`spec_set-PARTLY_IMPLEMENTED`  \n`spec_set-FULLY_IMPLEMENTED`   \n`spec_set-OBSOLET`  \n`spec_set-DEADLINE`  **'2014-12-24'**  \n`spec_set-ESTIMATEDHOURS`  **12**  \n`spec_set-TITLE`  **'my title'**  \n\n#### Set Meta Data of Section\n\n`spec_set-SCENARIO-RESPONSIBLE`   **'Peter Pan' -at 2**    \n`spec_set-SCENARIO-PLANNING`  **-at 2**  \n`spec_set-SCENARIO-APPROVED`   **-at 2**  \n`spec_set-SCENARIO-PARTLY_IMPLEMENTED`   **-at 2**  \n`spec_set-SCENARIO-FULLY_IMPLEMENTED`   **-at 2**  \n`spec_set-SCENARIO-OBSOLET`   **-at 2**  \n`spec_set-SCENARIO-DEADLINE`   **'2014-12-24' -at 2**  \n`spec_set-SCENARIO-ESTIMATEDHOURS`  **12 -at 2**  \n`spec_set-SCENARIO-TITLE`  **'my title' -at 3**  \n\n`spec_set-CONTRADICTION-RESPONSIBLE`  **'Peter Pan' -at 2**    \n`spec_set-CONTRADICTION-PLANNING`   **-at 2**  \n`spec_set-CONTRADICTION-APPROVED`   **-at 2**  \n`spec_set-CONTRADICTION-PARTLY_IMPLEMENTED`   **-at 2**  \n`spec_set-CONTRADICTION-FULLY_IMPLEMENTED`   **-at 2**  \n`spec_set-CONTRADICTION-OBSOLET`   **-at 2**  \n`spec_set-CONTRADICTION-DEADLINE`  **'2014-12-24' -at 2**  \n`spec_set-CONTRADICTION-ESTIMATEDHOURS`  **3 -at 2**  \n`spec_set-CONTRADICTION-TITLE`  **'my title' -at 3**  \n\n`spec_set-DEFINITION-RESPONSIBLE` **'Peter Pan' -at 2**    \n`spec_set-DEFINITION-PLANNING`   **-at 2**  \n`spec_set-DEFINITION-APPROVED`   **-at 2**  \n`spec_set-DEFINITION-PARTLY_IMPLEMENTED`   **-at 2**  \n`spec_set-DEFINITION-FULLY_IMPLEMENTED`   **-at 2**  \n`spec_set-DEFINITION-OBSOLET`   **-at 2**  \n`spec_set-DEFINITION-DEADLINE`  **'2014-12-24' -at 2**  \n`spec_set-DEFINITION-ESTIMATEDHOURS`  **3 -at 2**  \n`spec_set-DEFINITION-TITLE`  **'my title' -at 3**  \n\n`spec_set-FEATURE-RESPONSIBLE`  **'Peter Pan' -at 2**    \n`spec_set-FEATURE-PLANNING`  **-at 2**  \n`spec_set-FEATURE-APPROVED`  **-at 2**  \n`spec_set-FEATURE-PARTLY_IMPLEMENTED`  **-at 2**  \n`spec_set-FEATURE-FULLY_IMPLEMENTED`  **-at 2**  \n`spec_set-FEATURE-OBSOLET`   **-at 2**  \n`spec_set-FEATURE-DEADLINE`  **'2014-12-24' -at 2**  \n`spec_set-FEATURE-ESTIMATEDHOURS`  **3 -at 2**  \n`spec_set-FEATURE-TITLE`  **'my title' -at 3**  \n\n`spec_set-NONGOAL-RESPONSIBLE` **'Peter Pan' -at 2**    \n`spec_set-NONGOAL-PLANNING`   **-at 2**  \n`spec_set-NONGOAL-APPROVED`   **-at 2**  \n`spec_set-NONGOAL-PARTLY_IMPLEMENTED`  **-at 2**  \n`spec_set-NONGOAL-FULLY_IMPLEMENTED`   **-at 2**  \n`spec_set-NONGOAL-OBSOLET`   **-at 2**  \n`spec_set-NONGOAL-DEADLINE`  **'2014-12-24' -at 2**  \n`spec_set-NONGOAL-ESTIMATEDHOURS`  **3 -at 2**  \n`spec_set-NONGOAL-TITLE`  **'my title' -at 3**  \n\n`spec_set-UNDECIDED-RESPONSIBLE`  **'Peter Pan' -at 2**    \n`spec_set-UNDECIDED-PLANNING`   **-at 2**  \n`spec_set-UNDECIDED-APPROVED`   **-at 2**  \n`spec_set-UNDECIDED-PARTLY_IMPLEMENTED`   **-at 2**  \n`spec_set-UNDECIDED-FULLY_IMPLEMENTED`   **-at 2**  \n`spec_set-UNDECIDED-OBSOLET`   **-at 2**  \n`spec_set-UNDECIDED-DEADLINE`  **'2014-12-24' -at 2**  \n`spec_set-UNDECIDED-ESTIMATEDHOURS`  **3 -at 2**  \n`spec_set-UNDECIDED-TITLE`  **'my title' -at 3**  \n\n",
        "Comments": {},
        "LastUpdate": "2013-11-13",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-13",
        "EstimatedHours": 1
      }
    ],
    "NONGOAL": [
      {
        "Responsible": "mra",
        "Title": "No GUI",
        "Text": "To have a GUI would be a project on its own.\nHowever such a project could also be external and be built upon speccer.",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "APPROVED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "No Database",
        "Text": "`speccer` will operate on plain text json files only.\nThere will be no way to have a database and search.\nA database could however exchange data with `speccer`\nvia json files.",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "APPROVED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "No versioning",
        "Text": "`speccer` will not do any backups or have versions.\nYou are advised to use a version control system to save your\nspecs or make backups by a backup tool.",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "APPROVED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "No editing",
        "Text": "`speccer` will have any functionality of an editor.\nYou may however replace parts of the spec by exporting them\nto your favourite editor and reimport them when you are finished.",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "APPROVED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "No merging of specs",
        "Text": "`speccer` won't provide any mechanism to merge specs.\nSince you can export and import parts of the specs in\nplain text or markdown, it is not hard to merge by hand.",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "APPROVED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "No copying of specs",
        "Text": "`speccer` won't help you copying specs, since you can simply\ncopy the json files yourself and then edit the copy.",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "APPROVED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "No rights management",
        "Text": "`speccer` won't have any rights management baked in. \nYou could manage the viewing and changing rights for\na single spec by the filesystem.\n\nIf you need finer control, you need to write a wrapper\naround `speccer` or the `speclib`.",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "APPROVED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "No multiple comments per author and paragraph",
        "Text": "With `speclib` (and therefor `speccer` too),\na single author can only have one comment per paragraph.\n\nWe consider this a good thing, since it forces the spec\nto be split up in several paragraphs if they get too many\ncomments. The spec will benefit from it.\n\nAlso it is possible to have comments of arbitrary length.\n",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "APPROVED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "No 'threads'",
        "Text": "Again this is a decision by `speclib` and considered a good \nthing. There should not be comments on comments and endless\ndiscussions. Instead the comments should be directed to a \nparagraph and decision should be made soon.\n\nThen the different topics should seperate into the different\nsections like 'UNDECIDED', 'CONTRADICTIONS', 'DEFINITIONS',\n'FEATURES' etc. and there should be multiple paragraphs \nwhich may each have their own state of consense and comments.\n",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "APPROVED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "No order of comments",
        "Text": "Again this is a decision by `speclib`.\nSince each author may just have one comment per paragraph, \nthere is no point in have an order for comments.\n\nHowever their is an order of paragraphs and that could \nbe changed.\n",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "APPROVED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "No text generation",
        "Text": "Since the specs format is based on json, it is very easy \nand flexible to have own templates and copy them.",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "APPROVED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "No PDF export",
        "Text": "There are great tools to convert from HTML to PDF, like `wkhtmltopdf` and\nalso markdown to pdf converter like `pandoc`. Since `speccer` exports \nto HTML and markdown you should be able to use these tools to generate\nPDFs.",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "APPROVED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "No Translations for SPECS",
        "Text": "There is rudimentary support for translations of key words that\nare automatically inserted via `speclib`.\n\nIf your language is not supported, it is very easy to translate \non your own. A simple bash-script will do. You only have to\nreplace the keys as they are in the translations folders.\n\nYou might also contribute your translations to the project.\n\nHowever for the main text of the specs they should be translated\nby creating a new spec of each language and telling the other\nspecs of the translation in the TRANSLATIONS section of the specs.",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "APPROVED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "No time tracking",
        "Text": "Each paragraph has a field ESTIMATEDHOURS that could be used to\ndo basic scheduling.\n\nAn external tool could then collect the estimated hours and compare\nthem to the real time to drive conclusions about the schedule.\n\nMore time tracking functionality is not part of this project.\n",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "APPROVED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "No shortcuts for commands or presets",
        "Text": "Some commands and options are hard to remember.\nBut instead of bake new options into `speccer` we\ndeliver an alias file you could use in your bash or zsh shell.\n\nHave a look at it to see how easy you could do one on your own.\nIn the alias you could also set defaults for responsibles etc.\n",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "APPROVED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "No translation of options",
        "Text": "In order to be able to associate the wordings of the options\nto the corresponding keys in the json file and the untranslated\nspecs the options will not be translated.",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "APPROVED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      }
    ],
    "SCENARIO": [
      {
        "Responsible": "mra",
        "Title": "Create Specification",
        "Text": "Mike wants to create a specification. He gets a clean\nstarting point with `speccer`.",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "Add comments",
        "Text": "Mike receives comments for his specification.\nHe wants to add them without hassle.\n",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "See and update specification",
        "Text": "Mike wants to update his specification with is\neditor.\n",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "Script",
        "Text": "Gill wants to change specifications with a script.\n",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "Import and export",
        "Text": "Gill wants to read import and export specifications\nfrom different places.\n",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "View as HTML and markdown",
        "Text": "Sue wants to read the specifications in HTML and \nbe able to mail them as markdown.\n",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "Filter for documentation",
        "Text": "Peter wants to create a documentation from the spec and\nwants the unneccessary informations to be filtered.",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      },
      {
        "Responsible": "mra",
        "Title": "Filter for implementation",
        "Text": "Anne wants to implement parts of the specification.\nShe just wants to read the parts that are ready\nto be implemented.",
        "Comments": {},
        "LastUpdate": "2013-11-12",
        "State": "FULLY_IMPLEMENTED",
        "Deadline": "2013-11-12",
        "EstimatedHours": 1
      }
    ],
    "UNDECIDED": [
      {
        "Responsible": "mra",
        "Title": "It is not really clear how the linefeed is",
        "Text": "exported in markdown and json.\nSee the linefeed paragraph",
        "Comments": {
          "mra": "No longer an issue. Every import and export replaces\nto `\\n` only. Editors should be able to handle it, \notherwise other tools would be needed to convert\nbefore editing."
        },
        "LastUpdate": "2013-11-12",
        "State": "OBSOLET",
        "Deadline": "2013-11-11",
        "EstimatedHours": 1
      }
    ]
  },
  "Approved": false
}
